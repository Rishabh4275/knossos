(ns knossos.linear.stress-test
  (:require [clojure.test :refer :all]
            [clojure.edn :as edn]
            [clojure.java.io :as io]
            [clojure.pprint :refer [pprint]]
            [clojure.tools.logging :refer :all]
            [knossos.model :as model]
            [knossos.linear :as linear]
            [knossos.memory :as memory])
  (:import (java.io PushbackReader)))

(defn tuple?
  "Is the given value generated by an independent generator?"
  [value]
  (instance? clojure.lang.MapEntry value))

(defn histories
  "A map of object ids to histories on that object"
  [file]
  (with-open [r (PushbackReader. (io/reader file))]
    (->> (repeatedly #(edn/read {:eof nil} r))
         (take-while identity)
         (reduce (fn [m [process type f [k value]]]
                   (let [hist (get m k [])]
                     (assoc m k (conj hist {:process process
                                            :type    type
                                            :f       f
                                            :value   value}))))
                 (sorted-map)))))

(defn write-history!
  "Write a history to a file"
  [file history]
  (with-open [w (io/writer file)]
    (binding [*out* w]
      (pprint history))))

(deftest stress-test
  (doseq [[k history] (histories "data/memstress4.edn")]
    (if (:valid? (linear/analysis (model/cas-register 0) history))
      (write-history! (str "data/good/memstress4-" k ".edn") history)
      (write-history! (str "data/bad/memstress4-" k ".edn") history))))

